swagger: '2.0'
info:
  title: beepbeep Data Service
  description: Returns info about beepbeep
  license:
    name: AGPL-v3.0
    url: "https://www.gnu.org/licenses/agpl-3.0.en.html"
  version: 1.0.0
host: 127.0.0.1
schemes:
  - https
  - http
tags:
  - name: user
    description: Operations about user
  - name: run
    description: Operations about run
paths:
  /users:
    get:
      tags:
        - user
      summary: Get all the users
      operationId: getUsers
      description: This can only be done by the admin logged in user
      produces:
        - application/json
      responses:
        '200':
          description: List of user objects
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
    post:
      tags:
        - user
      summary: Create a new user
      operationId: addUser
      description: This can be done by everyone
      produces:
        - application/json
      parameters:
        - name: email
          in: query
          description: user email
          required: true
          type: string
        - name: firstname
          in: query
          description: first name
          required: true
          type: string
        - name: lastname
          in: query
          description: user last name
          required: true
          type: string
        - name: age
          in: query
          description: user age
          required: false
          type: integer
        - name: weight
          in: query
          description: user weight
          required: false
          type: number
        - name: max_hr
          in: query
          description: max heart rate
          required: false
          type: integer
        - name: rest_hr
          in: query
          description: heart rate at rest
          required: false
          type: integer
        - name: vo2max
          in: query
          description: max volume of oxygen
          required: false
          type: number
      responses:
        '200':
          description: the new User ID.
          schema:
            type: integer
        '400':
          description: Bad request
        '409':
          description: The user already exists
  '/users/{user_id}':
    get:
      tags:
        - user
      summary: Get a single user
      operationId: getUser
      description: This can be done by the user_id and the task in background
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: User object
          schema:
            $ref: '#/definitions/User'
        '404':
          description: The user doesn't exists
    post:
      tags:
        - user
      summary: Set the Strava token
      operationId: setToken
      description: Set the Strava token to the specified user. The token is used to fetch data from Strava.
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
        - name: strava_token
          in: query
          description: token of Strava
          required: false
          type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '404':
          description: The user doesn't exists
        '409':
          description: The token is used by another user
    delete:
      tags:
        - user
      summary: Deletion of the user
      operationId: deleteUser
      description: This can be done only by the user_id
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: Successful delete user
        '400':
          description: Bad request
        '404':
          description: The user doesn't exists
  /runs:
    get:
      tags:
        - run
      summary: Get runs of the user_id
      operationId: getRuns
      description: This can be done only by the data-pump and mail-pump
      parameters:
        - name: user_id
          in: query
          description: The user id
          required: true
          type: integer
      responses:
        '200':
          description: List of run objects
          schema:
            type: array
            items:
              $ref: '#/definitions/Run'
        '400':
          description: Bad request
    post:
      tags:
        - run
      summary: Add new user's runs
      operationId: addRuns
      description: This can be done only by data-pump
      parameters:
        - name: title
          in: query
          required: true
          type: string
        - name: description
          in: query
          required: true
          type: string
        - name: strava_id
          in: query
          required: true
          type: integer
        - name: distance
          in: query
          required: true
          type: number
        - name: start_date
          in: query
          required: true
          type: string
          format: date-time
        - name: elapsed_time
          in: query
          required: true
          type: number
        - name: average_speed
          in: query
          required: true
          type: number
        - name: average_heartrate
          in: query
          required: true
          type: number
        - name: total_elevation_gain
          in: query
          required: true
          type: number
        - name: runner_id
          in: query
          required: true
          type: integer
      responses:
        '200':
          description: number of the runs added
          schema:
            type: integer
        '400':
          description: Bad request
  '/runs/{run_id}':
    get:
      tags:
        - run
      summary: Get run
      operationId: getRun
      description: This can be done by all connected user
      parameters:
        - name: run_id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: run object
          schema:
            $ref: '#/definitions/Run'
        '400':
          description: The run does not belong to the user
        '404':
          description: The run id does not exists
definitions:
  User:
    type: object
    required:
      - id
      - email
      - firstname
      - lastname
    properties:
      id:
        type: integer
        description: The user ID
      email:
        type: string
        description: The user email
      firstname:
        type: string
        description: The user's first name
      lastname:
        type: string
        description: The user's last name
      strava_token:
        type: string
        description: The user strava token
      age:
        type: integer
        description: The user's age
      weight:
        type: number
        description: The user's weight
      max_hr:
        type: integer
        description: The user' max heart rate
      rest_hr:
        type: integer
        description: The user's heart rate at rest
      vo2max:
        type: number
        description: The user vo2max
  Run:
    type: object
    required:
      - id
      - title
      - description
      - strava_id
      - distance
      - start_date
      - elapsed_time
      - average_speed
      - average_heartrate
      - total_elevation_gain
      - runner_id
    properties:
      id:
        type: integer
        description: The run ID
      title:
        type: string
        description: The run title
      description:
        type: string
        description: The run description
      strava_id:
        type: integer
        description: The run strava_id
      distance:
        type: integer
        description: The run distance
      start_date:
        type: string
        format: date-time
        description: The run starting date
      elapsed_time:
        type: integer
        description: The run duration
      average_speed:
        type: integer
        description: The run average speed
      average_heartrate:
        type: integer
        description: The run average heart rate
      total_elevation_gain:
        type: integer
        description: The run total elevation gain
      runner_id:
        type: integer
        description: The user ID of the runner
        