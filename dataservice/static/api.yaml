openapi: "3.0.0"
info:
  title: beepbeep Data Service
  description: returns info about beepbeep
  license:
    name: APLv2
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: '0.2'
paths:
    /users:
      get:
        operationId: getUsers
        description: Returns a list of users
        responses:
          '200':
            description: List of user objects
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/User'
      post:
        operationId: addUser
        description: Adds a new user
        parameters:
          - name: email
            in: query
            description: user email
            required: true
            schema:
              type: string
          - name: firstname
            in: query
            description: first name
            required: true
            schema:
              type: string
          - name: lastname
            in: query
            description: user last name
            required: true
            schema:
              type: string
          - name: age
            in: query
            description: user age
            required: false
            schema:
              type: integer
          - name: weight
            in: query
            description: user weight
            required: false
            schema:
              type: integer
          - name: max_hr
            in: query
            description: max heart rate
            required: false
            schema:
              type: number
          - name: rest_hr
            in: query
            description: heart rate at rest
            required: false
            schema:
              type: number
          - name: vo2max
            in: query
            description: max volume of oxygen
            required: false
            schema:
              type: number
        responses:
          '200':
            description: A JSON object containing the new User ID.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    user_id:
                      type: string
                      description: The new User ID.
          '409':
            $ref: '#/definitions/AlreadyExistent'
          '400':
            $ref: '#/definitions/BadRequest'
            
    /user/{user_id}:
      get:
        operationId: getUser
        description: Returns a single user
        parameters:
          - name: user_id
            in: path
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: User object
            content:
              application/json:
                schema:
                  $ref: '#/definitions/User'
          '404':
            $ref: '#/definitions/NotFound'
      delete:
        operationId: deleteUser
        description: Deletion of the user
        parameters:
          - name: user_id
            in: path
            required: true
            schema:
              type: integer
        responses:
          '200':
            $ref: '#/definitions/OK'
          '400':
            $ref: '#/definitions/BadRequest'
          '404':
            $ref: '#/definitions/NotFound'
    /runs:
      post:
        operationId: addRuns
        description: Adds runs
        parameters:
          - name: title
            in: query
            required: true
            schema:
              type: string
          - name: description
            in: query
            required: true
            schema:
              type: string
          - name: strava_id
            in: query
            required: true
            schema:
              type: integer
          - name: distance
            in: query
            required: true
            schema:
              type: number
          - name: start_date
            in: query
            required: true
            schema:
              type: string
          - name: elapsed_time
            in: query
            required: true
            schema:
              type: number
          - name: average_speed
            in: query
            required: true
            schema:
              type: number
          - name: average_heartrate
            in: query
            required: true
            schema:
              type: number
          - name: total_elevation_gain
            in: query
            required: true
            schema:
              type: number
          - name: runner_id
            in: query
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: List of run object
            content: 
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/Run'
          '400':
            $ref: '#/definitions/BadRequest'
      get:
        operationId: getRuns
        description: Get Runs of the user id
        parameters:
          - name: user_id
            in: query
            description: The user id
            required: true
            schema:
              type: integer
        responses:
            '200':
              description: List of run objects
              content:
                  application/json:
                    schema:
                      type: array
                      items:
                        $ref: '#/definitions/Run'
            '400':
              $ref: '#/definitions/BadRequest'


    /runs/{run_id}:
      get:
        operationId: getRun
        description: Returns a single run
        parameters:
          - name: run_id
            in: path
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: run object
            content:
              application/json:
                schema:
                  $ref: '#/definitions/Run'
          '404':
            $ref: '#/definitions/NotFound'

    /objectives:
      get:
        operationId: getObjectives
        description: Return all the objectives of the user id
        parameters:
          - name: user_id
            in: query
            description: The user id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: List of objective objects
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/Objective'
          '400':
            $ref: '#/definitions/BadRequest'
          '404':
            $ref: '#/definitions/BadRequest'
      post:
        operationId: createObjective
        description: Create a new Objective object
        parameters:
          - name: user_id
            in: query
            description: The user id
            required: true
            schema:
              type: integer
          - name: name
            in: query
            description: name of the objective
            required: true
            schema:
              type: string
          - name: target_distance
            in: query
            description: target distance of the objective
            required: true
            schema:
              type: number
          - name: start_date
            in: query
            description: start date of the objective
            required: true
            schema:
              type: string
          - name: end_date
            in: query
            description: end date of the objective
            required: true
            schema:
              type: string
          - name: runner_id
            in: query
            description: user id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: objective object
            content:
              application/json:
                schema:
                  $ref: '#/definitions/Objective'
          '400':
            $ref: '#/definitions/BadRequest'

    /objectives/{objective_id}:
      get:
        operationId: getObjective
        description: Return the objective id of the user id
        parameters:
          - name: objective_id
            in: path
            required: true
            schema:
              type: integer
          - name: user_id
            in: query
            description: The user id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: objective object
            content:
              application/json:
                schema:
                  $ref: '#/definitions/Objective'
          '400':
            $ref: '#/definitions/BadRequest'

    /challenges:
      get:
        operationId: getChallenges
        description: Return all the challenges of the user id
        parameters:
          - name: user_id
            in: query
            description: The user id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: List of challenge objects
            content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/definitions/Challenge'
          '400':
            $ref: '#/definitions/BadRequest'
      post:
        operationId: createChallenge
        description: Create a new Challenge object
        parameters:
          - name: run_one
            in: query
            description: id of the first run
            required: true
            schema:
              type: integer
          - name: name_run_one
            in: query
            description: name of the first run
            required: true
            schema:
              type: number
          - name: run_two
            in: query
            description: id of the second run
            required: true
            schema:
              type: integer
          - name: name_run_two
            in: query
            description: name of the second run
            required: true
            schema:
              type: string
          - name: id_user
            in: query
            description: user id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: challenge object
            content:
              application/json:
                schema:
                  $ref: '#/definitions/Challenge'
          '400':
            $ref: '#/definitions/BadRequest'


    /challenges/{challenge_id}:
      get:
        operationId: getChallenge
        description: Return the challenge id
        parameters:
          - name: challenge_id
            in: path
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: challenge object
            content:
              application/json:
                schema:
                  $ref: '#/definitions/Challenge'
          '400':
            $ref: '#/definitions/BadRequest'
          '404':
            $ref: '#/definitions/NotFound'

definitions:
  OK:
    description: Success.
    content:
      application/json:
        schema:
          $ref: '#/definitions/Error'
  BadRequest:
    description: The request was not well formed.
    content:
      application/json:
        schema:
          $ref: '#/definitions/Error'
  NotFound:
    description: The specified resource was not found.
    content:
      application/json:
        schema:
          $ref: '#/definitions/Error'
  AlreadyExistent:
    description: The specified resource is already present.
    content:
      application/json:
        schema:
          $ref: '#/definitions/Error'

  User:
    type: object
    properties:
      id:
        type: integer
        description: The user ID.
      email:
        type: string
        description: The user email.
      firstname:
        type: string
        description: The user's first name.
      lastname:
        type: string
        description: The user's last name.
      strava_token:
        type: integer
        description: The user strava token.
      age:
        type: integer
        description: The user's age.
      weight:
        type: integer
        description: The user's weight.
      max_hr:
        type: integer
        description: The user' max heart rate.
      rest_hr:
        type: integer
        description: The user's heart rate at rest.
      vo2max:
        type: integer
        description: The user vo2max.
  Run:
    type: object
    properties:
      id:
        type: integer
        description: The run ID.
      title:
        type: string
        description: The run title.
      description:
        type: string
        description: The run description.
      strava_id:
        type: integer
        description: The run strava_id.
      distance:
        type: integer
        description: The run distance.
      start_date:
        type: string
        description: The run starting date.
      elapsed_time:
        type: integer
        description: The run duration.
      average_speed:
        type: integer
        description: The run average speed.
      average_heartrate:
        type: integer
        description: The run average heart rate.
      total_elevation_gain:
        type: integer
        description: The run total elevation gain.
      runner_id:
        type: integer
        description: The user ID of the runner.
  Objective:
    type: object
    properties:
      id:
        type: integer
        description: The Objective ID.
      name:
        type: string
        description: The Objective name.
      target_distance:
        type: integer
        description: The Objective target_distance.
      start_date:
        type: string
        description: The Objective starting date.
      end_date:
        type: integer
        description: The Objective ending date.
      runner_id:
        type: integer
        description: The user ID of the runner.
  Challenge:
    type: object
    properties:
      id:
        type: integer
        description: The Challenge ID.
      run_one:
        type: integer
        description: The first run ID.
      name_run_one:
        type: string
        description: The first run name.
      run_two:
        type: integer
        description: The second run ID.
      name_run_two:
        type: string
        description: The second run name.
  Error:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
    required:
      - code
      - message
