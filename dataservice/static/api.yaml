swagger: "2.0"
info:
	title: beepbeep Data Service
	description: returns info about beepbeep
	license:
		name: APLv2
		url: https://www.apache.org/licenses/LICENSE-2.0.html
	version: 0.1.0
basePath: /api
paths:
		/users:
			get:
				operationId: getUsers
				description: Returns a list of users
				produces:
					- application/json
				responses:
					'200':
						description: List of user objects
						schema:
							type: array
							items:
								type: User
			post:
				operationId: addUser
				description: Adds a new user
				produces:
					- application/json
				parameters:
					- name: email
						in: body
						description: user email
						required: true
						type: string
					- name: firstname
						in: body
						description: first name
						required: true
						type: string
					- name: lastname
						in: body
						description: user last name
						required: true
						type: string
					- name: age
						in: body
						description: user age
						required: false
						type: integer
					- name: weight
						in: body
						description: user weight
						required: false
						type: integer
					- name: max_hr
						in: body
						description: max heart rate
						required: false
						type: float
					- name: rest_hr
						in: body
						description: heart rate at rest
						required: false
						type: float
					- name: vo2max
						in: body
						description: max volume of oxygen
						required: false
						type: float
				responses:
					'200':
						description: new user id
						schema:
							type: integer
					'409':
						description: The user already exists
					'400':
						description: bad request
							
		/users/{user_id}:
			get:
				operationId: getUser
				description: Returns a single user
				produces:
					- application/json
				parameters:
					- name: user_id
					  in: path
					  required: true
				responses:
					'200':
						description: User object
						schema:
							type: User
					'404':
						description: The user doesn't exists
			delete:
				operationId: deleteUser
				description: Deletion of the user
				produces:
					- application/json
				parameters:
					- name: user_id
					  in: path
					  required: true
				responses:
					'200':
						description: The deletion is successful
					'404':
						description: The user doesn't exists

		/runs:
			post:
				operationId: addRuns
				description: Adds runs
				produces:
					- application/json
				parameters:
				- name: title
				  in: body
				  required: true
				- name: title
				  in: body
				  required: true
				- name: title
				  in: body
				  required: true
				- name: title
				  in: body
				  required: true
				responses:
					'200':
						description: List of run object
						schema:
							type: array
							items:
								type: Run

		/runs/{runner_id}:
			get:
				operationId: getRuns
				description: Get Runs of the runner id
				produces:
					- application/json
				parameters:
					- name: runner_id
						in: path
						description: The user id
						required: true
						type: integer
						responses:
							'200':
								description: List of run object
									schema:
										type: array
										items:
											type: Run
		/runs/{run_id}:
			get:
				operationId: getRun
				description: Returns a single run
				produces:
					- application/json
				parameters:
					- name: id
				in: path
				responses:
					'200':
						description: